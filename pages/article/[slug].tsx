import React from 'react'
import { fetchArticle } from '../../http'
import { IArticle, ICollectionResponse } from '../../types'
import { AxiosResponse } from 'axios';
import qs from 'qs';
import { GetServerSideProps } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { formatDate } from '../../utils';

interface IPropType {
    article: IArticle;
    notFound?: boolean;
}

const slug = ({ article, notFound = false }: IPropType) => {
    // console.log(article.attributes.author.data.attributes.avatar.data.attributes.formats.thumbnail.url)
    return (
        <>
            <Head>
                <title>{article.attributes.Title}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className='my-12 grid lg:grid-cols-3 gap-12'>
                <div className="col-span-2">
                    <h1 className="text-3xl font-bold py-2">
                        {article.attributes.Title}
                    </h1>
                    <div className="flex items-center my-4">
                        <div className="rounded-lg overflow-hidden flex items-center justify-center mr-2">
                            <Image alt=""
                                src={`http://localhost:1337${article.attributes.author.data.attributes.avatar.data.attributes.formats.thumbnail.url}`}
                                height={40}
                                width={40}
                            />
                        </div>
                        <span className="text-sm font-bold text-gray-600">
                            {
                                article.attributes.author.data.attributes
                                    .firstname
                            }{' '}
                            {article.attributes.author.data.attributes.lastname}{' '}
                            on &nbsp;
                            <span className="text-gray-400">
                                {formatDate(article.attributes.createdAt)}
                            </span>
                        </span>
                    </div>
                    <div className="text-lg text-gray-600 leading-8 mb-20">
                        {article.attributes.Image?.data ? <Image alt=""
                            className="w-full my-12 mb-6"
                            src={`http://localhost:1337${article.attributes.Image?.data?.attributes.url}`}
                            width="200px"
                            height="200px"
                        /> : <></>}

                        {article.attributes.Body}
                    </div>
                </div>
            </div>


        </>
    )
}


export const getServerSideProps: GetServerSideProps = async ({ query }) => {

    const queryString = qs.stringify({
        populate: ['Image', 'author.avatar'],
        filters: {
            Slug: {
                $eq: query.slug
            }
        }
    })

    const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> = await fetchArticle(queryString);

    if (articles.data.length === 0) {
        return {
            props: {
                notFound: true
            }
        }
    }
    return {
        props: {
            article: articles.data[0]
        }
    }
}

export default slug